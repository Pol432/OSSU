// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    field Array bit_map;

    /** Initializes the library. */
    function void init() {
        var int i, value;

        let i = 0;
        let value = 1;
        let bit_map = Array.new(16);
        while(i < 16) {
          let bit_map[i] = value;
          let i = i + 1;
          let value = value + value;
        }
    
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, shiftedX, i;
        var boolean bit_i;
        var int abs_x, abs_y;

        let abs_x = abs(x);
        let abs_y = abs(y);

        let sum = 0;
        let shiftedX = abs_x;
        let i = 0;

        while (i < 15) {
            if (bit(abs_y, i)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let i = i + 1;
        }

        if (x < 0) {
            let sum = -sum;
        }
        if (y < 0) {
            let sum = -sum;
        }
        return sum;
    }

    /** Returns True if the ith bit of x is 1, false otherwise */
    function boolean bit(int x, int i) {
        if ((x & bit_map[i]) > 0) {
            return true;
        } else {
            return false;
        }
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int abs_x, abs_y;
        var int q, i;

        if (y = 0) {
            do Sys.error(3);
        }

        let abs_x = abs(x);
        let abs_y = abs(y);

        if ((abs_y > abs_x) | (abs_y < 0)) { return 0; }

        let q = Math.divide(abs_x, (abs_y + abs_y));

        let i = Math.multiply((q + q), abs_y);

        if (x < 0) { let q = -q; }
        if (y < 0) { let q = -q; }

        if ((abs_x - i) < abs_y) {
            return q + q;
        }
        else {
            return (q + q) + 1;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int left, right, mid, midSq, result;
    
        if(x < 0) {
          do Sys.error(4);
        }
    
        let left = 0;
        let right = Math.min(x, 181);
        let result = 0;

        while(left < (right + 1)) {
            let mid = (left + right) / 2;
            let midSq = mid * mid;
            if (midSq > x) {
                let right = mid - 1;
            }
            else {
                let left = mid + 1;
                let result = mid;
          }
        }
    
        return result;
      }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        }
        else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        }
        else {
            return b;
        }
    }
}
