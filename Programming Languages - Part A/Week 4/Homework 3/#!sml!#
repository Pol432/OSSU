Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.59-38.65 Error: non-constructor applied to argument in pattern: ^
hw3.sml:38.83-38.85 Error: unbound variable or constructor: st
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.62-38.65 Error: unbound variable or constructor: sub
hw3.sml:38.48-38.72 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         _ * [int ty]
  in expression:
    Char.isUpper (<errorvar> str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.62-38.70 Error: unbound variable or constructor: sub in path Char.sub
hw3.sml:38.48-38.77 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         _ * [int ty]
  in expression:
    Char.isUpper (<errorvar> str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.48-38.79 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         char * [int ty]
  in expression:
    Char.isUpper (String.sub str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:39.13-39.44 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         char * [int ty]
  in expression:
    Char.isUpper (String.sub str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.47-38.78 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         char * [int ty]
  in expression:
    Char.isUpper (String.sub str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.46-38.77 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         char * [int ty]
  in expression:
    Char.isUpper (String.sub str,1)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.47-38.78 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char
  operand:         char * [int ty]
  in expression:
    Char.isUpper (String.sub str,0)
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val it = (): unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
hw3.sml:38.46 Error: syntax error: inserting  LPAREN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.60-38.76 Error: operator is not a function [tycon mismatch]
  operator: char
  in expression:
    (String.sub str) 0
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw3.sml:38.60-38.76 Error: operator is not a function [tycon mismatch]
  operator: char
  in expression:
    (String.sub str) 0
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Thu Aug 18 15:00:00 2016]
- use "hw3.sml";
[opening hw3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val it = () : unit
- val test1 = only_capitals ["A","B","C"] = ["A","B","C"];
val test1 = true : bool
- val test2 = longest_string1 ["A","bc","C"] = "bc";
val test2 = true : bool
- 

Process sml finished
